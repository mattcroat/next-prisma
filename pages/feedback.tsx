import Head from 'next/head'
import Link from 'next/link'

import { prisma } from 'lib/prisma'

export default function FeedbackPage({ feedback }) {
  function formatFeedbackType(feedback) {
    switch (feedback) {
      case 'Feedback':
        return 'bg-green-500 text-green-800'
      case 'Idea':
        return 'bg-yellow-300 text-yellow-800'
      case 'Issue':
        return 'bg-red-400 text-red-800'
    }
  }
  return (
    <div>
      <Head>
        <title>Feedback App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="h-auto my- my-36">
        <div className="container max-w-screen-lg px-4 mx-auto">
          <h1 className="mb-5 text-3xl font-bold tracking-wide text-white">
            Feedback
          </h1>
          <section className="flex flex-col ">
            <div className="-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8">
              <div className="inline-block min-w-full py-2 align-middle sm:px-6 lg:px-8">
                <div className="overflow-hidden border-b border-gray-800 rounded-lg shadow">
                  <table className="min-w-full divide-y divide-gray-800 ">
                    <thead className="bg-gray-800">
                      <tr>
                        <th
                          scope="col"
                          className="px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-300 uppercase"
                        >
                          Name
                        </th>
                        <th
                          scope="col"
                          className="px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-300 uppercase"
                        >
                          Email
                        </th>
                        <th
                          scope="col"
                          className="px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-300 uppercase"
                        >
                          Message
                        </th>
                        <th
                          scope="col"
                          className="px-6 py-3 text-xs font-medium tracking-wider text-left text-gray-300 uppercase"
                        >
                          Feedback Type
                        </th>
                      </tr>
                    </thead>
                    <tbody className="bg-gray-700 divide-y divide-gray-500">
                      {feedback.map((item) => (
                        <tr key={item.id}>
                          <td className="px-6 py-4 text-sm font-medium text-white whitespace-nowrap">
                            {item.name}
                          </td>
                          <td className="px-6 py-4 text-sm text-white whitespace-nowrap">
                            <a href={`mailto:${item.email}`}>{item.email}</a>
                          </td>
                          <td className="px-6 py-4 text-sm text-white truncate whitespace-nowrap">
                            <Link href={`/feedback/${item.id}`}>
                              {item.message}
                            </Link>
                          </td>
                          <td className="px-6 py-4 capitalize whitespace-nowrap">
                            <span
                              className={`flex-shrink-0 inline-block px-2 py-0.5 text-xs font-medium rounded-full ${formatFeedbackType(
                                item.feedbackType
                              )}`}
                            >
                              {item.feedbackType.toLowerCase()}
                            </span>
                          </td>
                        </tr>
                      ))}
                    </tbody>
                  </table>
                </div>
              </div>
            </div>
          </section>
        </div>
      </main>
    </div>
  )
}

export async function getServerSideProps() {
  const feedback = await prisma.feedback.findMany({
    select: {
      id: true,
      name: true,
      email: true,
      message: true,
      feedbackType: true,
    },
  })

  return {
    props: {
      feedback,
    },
  }
}
